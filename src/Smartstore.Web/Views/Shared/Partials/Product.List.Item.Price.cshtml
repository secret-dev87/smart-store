@using Smartstore.Core.Common;
@using Smartstore.Core.Catalog.Pricing;
@using Smartstore.Web.Models.Catalog;

@model ProductSummaryItemModel

@{
    var list = Model.Parent;
    if (!list.ShowPrice)
    {
        return;
    }

    var price = Model.Price2;
    var isListMode = list.ViewMode == ProductSummaryViewMode.List;
    var artPriceClass = "art-price";

    if (price.Saving.HasSaving)
    {
        artPriceClass += " art-price-offer";
    }

    if (price.CallForPrice)
    {
        artPriceClass += " art-price-call";
    }

    async Task RenderComparePrice(ComparePriceModel priceModel)
    {
        if (priceModel != null)
        {
            if (isListMode)
            {

            }
            else
            {
                <span class="art-compareprice">
                    @if (isListMode || price.ShowPriceLabel)
                    {
                        <span class="art-compareprice-label">@(priceModel.Label):</span>
                    }
                    <span class="art-compareprice-value">@priceModel.Price</span>
                </span>
            }
        }
    }
}

@*<div class="art-info-group">
    <div>
        <span>@T("Products.Price.OldPrice"):</span>
        <span class="art-oldprice">@Model.Price.RegularPrice.Value</span>
    </div>
    <div sm-if="Model.Price.SavingAmount.HasValue" class="d-flex">
        <span>@T("ShoppingCart.ItemYouSave"):</span>
        <span class="pl-2">@Model.Price.SavingAmount <span class="lrm">(@Model.Price.SavingPercent.ToString("N0") %)</span></span>
    </div>
</div>*@

<div class="art-price-block x-mb-2">
    <span class="@artPriceClass">
        <span class="art-finalprice">
            <span class="art-price-value">
                @Html.Raw(price.FinalPrice)
            </span>
            <span sm-if="!isListMode && price.ShowSavingBadge" class="art-saving-badge badge badge-danger">
                @T("Products.SavingBadgeLabel", price.Saving.SavingPercent.ToString("N0"))
            </span>
        </span>

        @* Compare prices *@
        <span sm-if="price.RegularPrice != null || price.RetailPrice != null" class="art-compareprice-group">
            @{ 
                // Regular price
                await RenderComparePrice(price.RegularPrice);

                // Retail price
                if (isListMode || price.RegularPrice == null)
                {
                    // Don't render retail price in compact mode if we have a regular price already
                    await RenderComparePrice(price.RetailPrice);
                }
            }
        </span>
    </span>

    <div sm-if="list.ShowShippingSurcharge && Model.TransportSurcharge.HasValue" class="art-shipsurcharge">
        @Model.TransportSurcharge.Value
    </div>

    @if (list.ShowBasePrice && Model.BasePriceInfo.HasValue())
    {
        <div class="art-pangv" attr-title='(Model.BasePriceInfo.HasValue(), Model.BasePriceInfo)'>
            @Html.Raw(LocalizedValue.FixBrackets(Model.BasePriceInfo, WorkContext.WorkingLanguage) ?? "&nbsp;")
        </div>
    }
</div>

@* Old price block *@
<div class="art-price-block d-none">
    <span class="@artPriceClass">
        @(Model.Price.SavingAmount.HasValue ? "% " : "")@Model.Price.Price
    </span>
    @if (Model.Price.RegularPrice.HasValue)
    {
        if (list.ViewMode == ProductSummaryViewMode.List)
        {
            <div class="art-info-group">
                <div>
                    <span>@T("Products.Price.OldPrice"):</span>
                    <span class="art-oldprice">@Model.Price.RegularPrice.Value</span>
                </div>
                <div sm-if="Model.Price.SavingAmount.HasValue" class="d-flex">
                    <span>@T("ShoppingCart.ItemYouSave"):</span>
                    <span class="pl-2">@Model.Price.SavingAmount <span class="lrm">(@Model.Price.SavingPercent.ToString("N0") %)</span></span>
                </div>
            </div>
        }
        else
        {
            <span class="art-oldprice">@Model.Price.RegularPrice</span>
        }
    }

    <div sm-if="list.ShowShippingSurcharge && Model.TransportSurcharge.HasValue" class="art-shipsurcharge">
        @Model.TransportSurcharge.Value
    </div>

    @if (list.ShowBasePrice && Model.BasePriceInfo.HasValue())
    {
        <div class="art-pangv" attr-title='(Model.BasePriceInfo.HasValue(), Model.BasePriceInfo)'>
            @Html.Raw(LocalizedValue.FixBrackets(Model.BasePriceInfo, WorkContext.WorkingLanguage) ?? "&nbsp;")
        </div>
    }
</div>

<zone name="productbox_add_info" />