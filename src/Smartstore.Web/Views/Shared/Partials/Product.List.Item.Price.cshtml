@using Smartstore.Core.Common;
@using Smartstore.Core.Catalog.Pricing;
@using Smartstore.Web.Models.Catalog;

@model ProductSummaryItemModel

@{
    var list = Model.Parent;
    if (!list.ShowPrice)
    {
        return;
    }

    var price = Model.Price2;
    var artPriceClasses = "art-price";

    if (price.DisplayTextForZeroPrices && price.FinalPrice == 0 && !price.CallForPrice)
    {
        price.FinalPrice = price.FinalPrice.WithPostFormat(T("Products.Free"));
    }

    if (price.Saving.HasSaving)
    {
        artPriceClasses += " art-price--offer";
    }

    if (price.CallForPrice)
    {
        artPriceClasses += " art-price--call";
    }
}

<div class="art-price-block x-mb-2">
    <span class="@artPriceClasses">
        <span class="art-price-value">
            @Html.Raw(price.FinalPrice)
        </span>
        <span sm-if="price.ShowSavingBadge" class="badge badge-danger art-saving-badge">
            @T("Products.SavingBadgeLabel", price.Saving.SavingPercent.ToString("N0"))
        </span>
    </span>
    @if (price.RegularPrice != null)
    {
        if (list.ViewMode == ProductSummaryViewMode.List)
        {
            <div class="art-info-group">
                <div>
                    <span>@T("Products.Price.OldPrice"):</span>
                    <span class="art-oldprice">@Model.Price.RegularPrice.Value</span>
                </div>
                <div sm-if="Model.Price.SavingAmount.HasValue" class="d-flex">
                    <span>@T("ShoppingCart.ItemYouSave"):</span>
                    <span class="pl-2">@Model.Price.SavingAmount <span class="lrm">(@Model.Price.SavingPercent.ToString("N0") %)</span></span>
                </div>
            </div>
        }
        else
        {
            <span class="art-promoprice-line">
                <span class="art-promoprice-label">@(price.RegularPrice.Label):</span>
                <span class="art-promoprice">@price.RegularPrice.Price</span>
            </span>
        }
    }

    <div sm-if="list.ShowShippingSurcharge && Model.TransportSurcharge.HasValue" class="art-shipsurcharge">
        @Model.TransportSurcharge.Value
    </div>

    @if (list.ShowBasePrice && Model.BasePriceInfo.HasValue())
    {
        <div class="art-pangv" attr-title='(Model.BasePriceInfo.HasValue(), Model.BasePriceInfo)'>
            @Html.Raw(LocalizedValue.FixBrackets(Model.BasePriceInfo, WorkContext.WorkingLanguage) ?? "&nbsp;")
        </div>
    }
</div>

@* Old price block *@
<div class="art-price-block d-none">
    <span class="@artPriceClasses">
        @(Model.Price.SavingAmount.HasValue ? "% " : "")@Model.Price.Price
    </span>
    @if (Model.Price.RegularPrice.HasValue)
    {
        if (list.ViewMode == ProductSummaryViewMode.List)
        {
            <div class="art-info-group">
                <div>
                    <span>@T("Products.Price.OldPrice"):</span>
                    <span class="art-oldprice">@Model.Price.RegularPrice.Value</span>
                </div>
                <div sm-if="Model.Price.SavingAmount.HasValue" class="d-flex">
                    <span>@T("ShoppingCart.ItemYouSave"):</span>
                    <span class="pl-2">@Model.Price.SavingAmount <span class="lrm">(@Model.Price.SavingPercent.ToString("N0") %)</span></span>
                </div>
            </div>
        }
        else
        {
            <span class="art-oldprice">@Model.Price.RegularPrice</span>
        }
    }

    <div sm-if="list.ShowShippingSurcharge && Model.TransportSurcharge.HasValue" class="art-shipsurcharge">
        @Model.TransportSurcharge.Value
    </div>

    @if (list.ShowBasePrice && Model.BasePriceInfo.HasValue())
    {
        <div class="art-pangv" attr-title='(Model.BasePriceInfo.HasValue(), Model.BasePriceInfo)'>
            @Html.Raw(LocalizedValue.FixBrackets(Model.BasePriceInfo, WorkContext.WorkingLanguage) ?? "&nbsp;")
        </div>
    }
</div>

<zone name="productbox_add_info" />